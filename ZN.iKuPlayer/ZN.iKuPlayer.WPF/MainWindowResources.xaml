<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--提前按钮样式-->
    <Style x:Key="btnAdvanceStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="歌词提前0.1s"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Width="18" Height="18" Opacity="0.1" StrokeThickness="1" Fill="#4f535d" Stroke="White"/>
                        <Ellipse x:Name="borderBtn" Width="18" Height="18" Stroke="White" StrokeThickness="1"/>
                        <!--按钮内容-->
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="5" Y1="0" X2="1" Y2="4"/>
                                <Line StrokeThickness="1" Stroke="White" X1="1" Y1="4" X2="5" Y2="8"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--最小化按钮样式-->
    <Style x:Key="btnMinimizeStyle" TargetType="Button">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="最小化"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Width="16" Fill="White" Opacity="0.1" RadiusX="3" RadiusY="3" StrokeThickness="1"/>
                        <Rectangle Width="16" StrokeThickness="1" RadiusX="3" RadiusY="3" Stroke="White"/>
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="0" X2="6" Y1="4" Y2="4"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnCloseStyle" TargetType="Button">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value=" 关闭"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Width="18" Height="18" Opacity="0.1" StrokeThickness="1" Fill="#4f535d" Stroke="White"/>
                        <Ellipse x:Name="borderBtn" Width="18" Height="18" StrokeThickness="1" Stroke="White"/>
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="0" Y1="0" X2="8" Y2="8"/>
                                <Line StrokeThickness="1" Stroke="White" X1="0" Y1="8" X2="8" Y2="0"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--歌词延后按钮样式-->
    <Style x:Key="btnDelayStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="歌词延后0.1s"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!--第一个有什么用？-->
                        <Ellipse Width="18" Height="18" Opacity="0.1" StrokeThickness="1" Fill="#4f535d" Stroke="White"/>
                        <Ellipse x:Name="borderBtn" Width="18" Height="18" StrokeThickness="1" Stroke="White"/>
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="3" X2="7" Y1="0" Y2="4"/>
                                <Line StrokeThickness="1" Stroke="White" X1="7" X2="3" Y1="4" Y2="8"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--设置按钮样式-->
    <Style x:Key="btnSettingStyle" TargetType="Button">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="设置"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Width="18" Height="16" Fill="White" Opacity="0.1" RadiusX="4" RadiusY="4" StrokeThickness="1"/>
                        <Rectangle Width="18" Height="16" StrokeThickness="1" RadiusX="4" RadiusY="4" Stroke="White"/>
                        <!--按钮内容-->
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="1" Y1="1" X2="8" Y2="8"/>
                                <Line StrokeThickness="2" Stroke="White" X1="-2" Y1="4" X2="4" Y2="-2"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--打开文件按钮样式-->
    <Style x:Key="btnOpenStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="borderoflrcbtnstyle" BorderBrush="White" BorderThickness="1" HorizontalAlignment="Center"
                                Background="Transparent" Width="{TemplateBinding Width}">
                            <TextBlock x:Name="textblockoflrcbtnstyle" Grid.Column="1" Text="{TemplateBinding Content}" HorizontalAlignment="Center"
                                       Margin="3 0 3 0" Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CheckBox.IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnLrcStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border x:Name="borderoflrcbtnstyle" BorderBrush="White" BorderThickness="1" HorizontalAlignment="Center" Background="Transparent"
                                Width="{TemplateBinding Width}">
                            <TextBlock x:Name="textblockoflrcbtnstyle" Grid.Column="1" Text="{TemplateBinding Content}" HorizontalAlignment="Center"
                                       Margin="3 0 3 0" Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CheckBox.IsMouseOver" Value=" True">
                            <Setter Property="BorderBrush" TargetName="borderoflrcbtnstyle" Value="Yellow"/>
                            <Setter Property="Foreground" TargetName="textblockoflrcbtnstyle" Value="Yellow"/>
                        </Trigger>
                        <Trigger Property="CheckBox.IsChecked" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="CheckBox.IsChecked" Value="False">
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--窗口圆角-->
    <CornerRadius x:Key="winCorner">
        <CornerRadius.BottomLeft>5</CornerRadius.BottomLeft>
        <CornerRadius.BottomRight>5</CornerRadius.BottomRight>
        <CornerRadius.TopLeft>5</CornerRadius.TopLeft>
        <CornerRadius.TopRight>5</CornerRadius.TopRight>
    </CornerRadius>
    <!--窗口边框样式-->
    <Style x:Key="winBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#00000000"/>
    </Style>
    <!--标题栏圆角-->
    <CornerRadius x:Key="winTitleCorner">
        <CornerRadius.BottomLeft>0</CornerRadius.BottomLeft>
        <CornerRadius.BottomRight>0</CornerRadius.BottomRight>
        <CornerRadius.TopLeft>5</CornerRadius.TopLeft>
        <CornerRadius.TopRight>5</CornerRadius.TopRight>
    </CornerRadius>
    <!--窗口标题栏-->
    <Style x:Key="winTitleStyle" TargetType="{x:Type Border}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="DockPanel.Dock" Value="Top"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
    </Style>
    <!--窗口样式模板-->
    <ControlTemplate x:Key="mainWindowTemplate" TargetType="{x:Type Window}">
        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <!--border元素：实现窗体四周半透明的环绕-->
            <Border BorderThickness="5" CornerRadius="6" BorderBrush="#000000" Opacity="0.08"/>
            <!-- borderBg实现半透明-->
            <Border x:Name="borderBg" Margin="5" Background="{TemplateBinding Background}" BorderBrush="#ffffff" Opacity="0.9" BorderThickness="2"
                    CornerRadius="{StaticResource winCorner}" Style="{StaticResource winBorderStyle}">
                <!-- 定义窗口的元素，grid分别为标题栏、内容 -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                </Grid>
            </Border>
            <Grid Margin="7">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="borderTitle" Grid.Row="0" CornerRadius="{StaticResource winTitleCorner}" Style="{StaticResource winTitleStyle}"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid Background="Transparent">
                        <TextBlock Text="{TemplateBinding Title}" Foreground="White" Opacity="0.75" HorizontalAlignment="Left"/>
                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Visible" Orientation="Horizontal">
                            <!-- 提前、延后、歌词开关、打开文件、设置、最小化和关闭按钮 -->
                            <Button x:Name="advanceButton" Command="{Binding LrcAdvanceCommand}" Style="{StaticResource btnAdvanceStyle}" />
                            <Button x:Name="delayButon" Command="{Binding LrcDelayCommand}" Style="{StaticResource btnDelayStyle}" />
                            <Button x:Name="OpenButton" Content="打开文件" Command="{Binding OpenFileCommand}" Style="{StaticResource btnOpenStyle}"/>
                            <CheckBox x:Name="LrcButton" Content="桌面歌词" Command="{Binding DesktopLrcSwitchCommand}" Style="{StaticResource btnLrcStyle}"/>
                            <Button x:Name="settingButton" Command="{Binding SettingCommand}" Style="{StaticResource btnSettingStyle}"/>
                            <Button x:Name="minimizeButton" Command="{Binding MinimizeCommand}" Style="{StaticResource btnMinimizeStyle}"/>
                            <Button x:Name="closeButton" Command="{Binding CloseCommand}" Style="{StaticResource btnCloseStyle}"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </ControlTemplate>
    <!--窗口样式-->
    <Style x:Key="windowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template" Value="{StaticResource mainWindowTemplate}"/>
    </Style>

</ResourceDictionary>