<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ZN.iKuPlayer.WPF">
    <!-- 提前按钮样式-->
    <Style x:Key="btnAdvanceStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="歌词延后0.1s"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Width="18" Height="18" Opacity=".1" StrokeThickness="1" Fill="#4f535d" Stroke="White"/>
                        <Ellipse x:Name="borderBtn" Width="18" Height="18" Stroke="White" StrokeThickness="1"/>
                        <!-- 按钮内容 -->
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="5" Y1="0" X2="1" Y2="4"/>
                                <Line StrokeThickness="1" Stroke="White" X1="1" Y1="4" X2="5" Y2="8"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 延后按钮样式 -->
    <Style x:Key="btnDelayStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="歌词提前0.1s"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Width="18" Height="18" Opacity=".1" StrokeThickness="1" Fill="#4f535d" Stroke="White"/>
                        <Ellipse x:Name="borderBtn" Width="18" Height="18" StrokeThickness="1" Stroke="White"/>
                        <!--按钮内容-->
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="3" X2="7" Y1="0" Y2="4"/>
                                <Line StrokeThickness="1" Stroke="White" X1="7" Y1="4" X2="3" Y2="8"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  设置按钮样式 -->
    <Style x:Key="btnSettingStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="ToolTip" Value="设置"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Width="18" Height="16" Fill="White" Opacity=".1" RadiusX="4" RadiusY="4" StrokeThickness="1"/>
                        <Rectangle Width="18" Height="16" StrokeThickness="1" RadiusX="4" RadiusY="4" Stroke="White"/>
                        <!-- 按钮内容 -->
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="1" Stroke="White" X1="1" Y1="1" X2="8" Y2="8"/>
                                <Line StrokeThickness="2" Stroke="White" X1="-2" Y1="4" X2="4" Y2="-2"/>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 打开文件按钮样式 -->
    <Style x:Key="btnOpenStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="borderoflrcbtnstyle" BorderBrush="White" BorderThickness="1" HorizontalAlignment="Center" Background="Transparent" Width="{TemplateBinding Width}">
                            <TextBlock x:Name="textblockoflrcbtnstyle" Grid.Column="1" Text="{TemplateBinding Content}"  HorizontalAlignment="Center" Margin="3 0 3 0" Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CheckBox.IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 桌面歌词开关按钮样式 -->
    <Style x:Key="btnLrcStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border x:Name="borderoflrcbtnstyle" BorderBrush="White" BorderThickness="1" HorizontalAlignment="Center" Background="Transparent" Width="{TemplateBinding Width}">
                            <TextBlock x:Name="textblockoflrcbtnstyle" Grid.Column="1" Text="{TemplateBinding Content}"  HorizontalAlignment="Center" Margin="3 0 3 0" Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CheckBox.IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="borderoflrcbtnstyle" Value="Yellow"/>
                            <Setter Property="Foreground" TargetName="textblockoflrcbtnstyle" Value="Yellow"/>
                        </Trigger>
                        <Trigger Property="CheckBox.IsChecked" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="CheckBox.IsChecked" Value="False">
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 频谱条样式 -->
    <Style x:Key="spectrumArticleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Canvas.Bottom" Value="0"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="Yellow" Offset="0.0"/>
                    <GradientStop Color="Red" Offset="0.25"/>
                    <GradientStop Color="Blue" Offset="0.75"/>
                    <GradientStop Color="LimeGreen" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 频谱线样式 -->
    <Style x:Key="spectralLineStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="2"/>
        <Setter Property="Opacity" Value="0.9"/>
    </Style>
    <!-- 窗口歌词样式 -->
    <Style x:Key="LyricStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="Background" SnapsToDevicePixels="true">
                        <TextBlock Text="{TemplateBinding Tag}" Foreground="{TemplateBinding Background}" Opacity="0.8" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="20" FontFamily="Courier New" FontWeight="Bold" TextAlignment="Left">
								<!--<TextBlock.Effect>
									<DropShadowEffect ShadowDepth="0" Color="Black" Opacity="1" BlurRadius="20"/>
								</TextBlock.Effect>-->
                        </TextBlock>
                        <Rectangle x:Name="PART_Track"/>
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <TextBlock x:Name="Indicator" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding Foreground}" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="20" FontFamily="Courier New" FontWeight="Bold" TextAlignment="Left"/>
                            </Grid>
                        </Decorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 音量条出现 -->
    <Storyboard x:Key="showVolume">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Volume">
            <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="260"/>
        </DoubleAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Volume">
            <SplineColorKeyFrame KeyTime="0" Value="#00000000"/>
            <SplineColorKeyFrame KeyTime="0:0:0.1" Value="Black"/>
        </ColorAnimationUsingKeyFrames>
    </Storyboard>
    <!-- 音量条消失 -->
    <Storyboard x:Key="hideVolume">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Volume">
            <SplineDoubleKeyFrame KeyTime="0" Value="260"/>
            <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="40"/>
        </DoubleAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Volume">
            <SplineColorKeyFrame KeyTime="0" Value="Black"/>
            <SplineColorKeyFrame KeyTime="0:0:0.5" Value="#00000000"/>
        </ColorAnimationUsingKeyFrames>
    </Storyboard>
    <!-- 窗口样式模板-->
    <ControlTemplate x:Key="mainWindowTemplate" TargetType="{x:Type Window}">
        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <!--border元素：实现窗体四周半透明的环绕-->
            <Border BorderThickness="3" CornerRadius="6" BorderBrush="#000000" Opacity="0.08"/>
            <!-- borderBg实现半透明-->
            <Border x:Name="borderBg" Margin="4" Background="{TemplateBinding Background}" BorderBrush="#ffffff" Opacity="0.9" BorderThickness="1" CornerRadius="{StaticResource winCorner}" Style="{StaticResource winBorderStyle}">
                <!-- 定义窗口的元素，grid分别为标题栏、内容 -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                </Grid>
            </Border>
            <Grid Margin="7">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!-- 标题栏框 -->
                <Border x:Name="borderTitle" Grid.Row="0" CornerRadius="{StaticResource winTitleCorner}" 
                        Style="{StaticResource winTitleStyle}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid Background="Transparent">
                        <TextBlock Text="{TemplateBinding Title}" Foreground="White" Opacity="0.75" HorizontalAlignment="Left"/>
                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Visible" 
                                    Orientation="Horizontal">
                            <!-- 提前、延后、歌词开关、打开文件、设置、最小化和关闭按钮 -->
                            <Button x:Name="advanceButton" Command="{Binding LrcAdvanceCommand}" 
                                    Style="{StaticResource btnAdvanceStyle}"/>
                            <Button x:Name="delayButton" Command="{Binding LrcDelayCommand}" 
                                    Style="{StaticResource btnDelayStyle}"/>
                            <Button x:Name="OpenButton" Command="{Binding OpenFileCommand}" Content="打开文件" 
                                    Style="{StaticResource btnOpenStyle}"/>
                            <CheckBox x:Name="LrcButton" Command="{Binding DesktopLrcSwitchCommand}" Content="桌面歌词" 
                                      Style="{StaticResource btnLrcStyle}"/>
                            <Button x:Name="settingButton" Command="{Binding SettingCommand}" 
                                    CommandParameter="{Binding ElementName=mainUC}" Style="{StaticResource btnSettingStyle}"/>
                            <Button x:Name="minimizeButton" Command="{Binding MinimizeCommand}" 
                                    CommandParameter="{Binding ElementName=mainUC}" Style="{StaticResource btnMinimizeStyle}"/>
                            <Button x:Name="closeButton" Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=mainUC}" 
                                    Style="{StaticResource btnCloseStyle}"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <!-- 内容 -->
                <Grid x:Name="gridContent" Grid.Row="1">
                    <ContentPresenter/>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <!-- 窗口样式设置 -->
    <Style x:Key="windowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource mainWindowTemplate}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
    </Style>
    <Style x:Key="LyricText" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="Background" SnapsToDevicePixels="true">
                        <TextBlock Text="{TemplateBinding Tag}" Foreground="{TemplateBinding Background}" Opacity="0.8" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="20" FontFamily="Courier New" FontWeight="Bold" TextAlignment="Left">
								<!--<TextBlock.Effect>
									<DropShadowEffect ShadowDepth="0" Color="Black" Opacity="1" BlurRadius="20"/>
								</TextBlock.Effect>-->
                        </TextBlock>
                        <Rectangle x:Name="PART_Track"/>
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <TextBlock x:Name="Indicator" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding Foreground}" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontSize="20" FontFamily="Courier New" FontWeight="Bold" TextAlignment="Left"/>
                            </Grid>
                        </Decorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--任务栏播放按钮-->
    <DrawingImage x:Key="PlayButtonImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Green" Geometry="M 50,25 L 0,0 L 0,50 Z"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <!--任务栏暂停按钮-->
    <DrawingImage x:Key="PauseButtonImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Yellow" Geometry="F1 M 0,0 V 50 H 20 V 0 Z M 30,0 V 50 H 50 V 0 Z"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <!--任务栏上一曲按钮-->
    <DrawingImage x:Key="LastButtonImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="White" Geometry="F1 M 0,25 L 24.5,50 V 0 Z M 25.5,25 L 50,50 V 0 Z"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <!--任务栏下一曲按钮-->
    <DrawingImage x:Key="NextButtonImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="White" Geometry="F1 M 0,0 V 50 L 24.5,25 Z M 25.5,0 V 50 L 50,25 Z"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <!--托盘菜单样式-->
    <Style x:Key="notifyIconMenuStyle" TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="Black" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF888888"/>
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--托盘菜单项样式-->
    <!--分割条-->
    <Style x:Key="notifyIconMenuSeparator" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="#888" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--菜单项-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <!--整个背景，带一点透明保证在没有文字的地方也能接受到焦点-->
        <Border Name="Border" Background="#01000000">
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <!--图标或勾选框-->
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <!--内容-->
                    <ColumnDefinition Width="*"/>
                    <!--快捷键-->
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <!--空出（与带子菜单的菜单项对齐）-->
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <!--图标-->
                <ContentPresenter Grid.Column="0" Width="13" Height="13" Name="Icon" Margin="6,1,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <!--勾选框-->
                <Border Name="Check" Grid.Column="0" Width="13" Height="13" Visibility="Collapsed" Margin="6,1,6,0">
                    <!--勾选图标-->
                    <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="White" StrokeThickness="2" Data="M 0 4 L 3 7 L 7 0"/>
                </Border>
                <!--内容-->
                <ContentPresenter Name="Content" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="0,2">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="White" Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                <!--快捷键信息显示-->
                <TextBlock Name="InputGestureText" Grid.Column="2" Foreground="White" Text="{TemplateBinding InputGestureText}" Margin="20,3,0,2" DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--图标为空时隐藏-->
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <!--为选择框则隐藏图标-->
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <!--是否勾选选择框-->
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <!--获取焦点状态-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#DDD"/>
                <Setter TargetName="InputGestureText" Property="Foreground" Value="Black"/>
                <Setter TargetName="Content" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Foreground="Black" Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="CheckMark" Property="Stroke" Value="Black"/>
            </Trigger>
            <!--不可用状态-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="InputGestureText" Property="Foreground" Value="#888"/>
                <Setter TargetName="Content" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Foreground="#888" Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="CheckMark" Property="Stroke" Value="#888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--带子菜单的菜单项-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <!--整个背景，带一点透明保证在没有文字的地方也能接受到焦点-->
        <Border Name="Border" Background="#01000000">
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <!--图标-->
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <!--内容-->
                    <ColumnDefinition Width="*"/>
                    <!--快捷键-->
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <!--下一级箭头-->
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <!--图标-->
                <ContentPresenter Grid.Column="0" Width="13" Height="13" Name="Icon" Margin="6,1,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <!--内容-->
                <ContentPresenter Name="Content" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="0,2">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Foreground="White" Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                <!--快捷键信息显示-->
                <TextBlock Name="InputGestureText" Grid.Column="2" Foreground="White" Text="{TemplateBinding InputGestureText}" Margin="20,3,0,2" DockPanel.Dock="Right"/>
                <!--下一级箭头-->
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#444"/>
                <!--下一级菜单-->
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" Background="Black" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF888888"/>
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--图标为空时隐藏-->
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <!--获取焦点状态-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#DDD"/>
                <Setter TargetName="InputGestureText" Property="Foreground" Value="Black"/>
                <Setter TargetName="Content" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Foreground="Black" Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--不可用状态-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="InputGestureText" Property="Foreground" Value="#888"/>
                <Setter TargetName="Content" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Foreground="#888" Text="{TemplateBinding Content}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--菜单样式-->
    <Style x:Key="notifyIconMenuItem" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 频谱条样式 -->
    <Style x:Key="spectrumHeighStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#E5FFFFFF"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Canvas.Bottom" Value="0"/>
        <Setter Property="Opacity" Value="0.8"/>
    </Style>

    <!-- 频谱线样式 -->
    <Style x:Key="spectrumBottomStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#E5FFFFFF"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="2"/>
        <Setter Property="Opacity" Value="0.9"/>
    </Style>

    <!--频谱样式-->
    <Style x:Key="spectrumListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Row="1" Style="{StaticResource spectrumHeighStyle}" Height="{Binding SpectrumHeight}"/>
                            <Rectangle Grid.Row="0" Style="{StaticResource spectrumBottomStyle}" Height="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>